/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import dao.PeliculaDao;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Image;
import static java.awt.SystemColor.text;
import java.awt.Toolkit;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import logica.PeliculaLogica;

/**
 *
 * @author Katy Nuñez
 */
public class JIFPelicula extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFPelicula
     * @throws java.sql.SQLException
     */
    String ubicacion;
    public JIFPelicula() throws SQLException {
        initComponents();
        llenarTablaPelicula(0, "");
        llenarComboBoxClasificacion();
        llenarComboBoxGenero();
        habilitarControles(true, false, false, false, false, true);
        fondo();
        jTASinopsis.setEnabled(false);
    }
    
    public void fondo(){
        ((JPanel) getContentPane()).setOpaque(false);
        ImageIcon imagen=new ImageIcon(this.getClass().getResource("/imagenes/Imagen12.png"));
        JLabel fondo=new JLabel();
        ImageIcon escala=new ImageIcon(imagen.getImage().getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH));
        fondo.setIcon(escala);
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0,0,getWidth(),getHeight());
        this.add(fondo, BorderLayout.CENTER);
        this.setSize(getWidth() + 10,fondo.getHeight() + 35);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        JMIEditar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        JMIEliminar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblPelicula = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jBtnNuevo = new javax.swing.JButton();
        jPnlPelicula = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFLanzamiento = new javax.swing.JTextField();
        jTFNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTASinopsis = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTFlink = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLblPelicula = new javax.swing.JLabel();
        jBtnAgregarImagen = new javax.swing.JButton();
        jBtnQuitarImagen = new javax.swing.JButton();
        jTFCodPelicula = new javax.swing.JTextField();
        jTFDuracion = new javax.swing.JTextField();
        jCboGenero = new javax.swing.JComboBox<>();
        jCboClasificacion = new javax.swing.JComboBox<>();
        jBtnCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jBtnGuardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRBCodPelicula = new javax.swing.JRadioButton();
        jRBNombre = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jTFBusqueda = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jBtnActualizar = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();

        JMIEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Restart_30px.png"))); // NOI18N
        JMIEditar.setText("Editar");
        JMIEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIEditarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(JMIEditar);
        jPopupMenu1.add(jSeparator1);

        JMIEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Cancel_30px.png"))); // NOI18N
        JMIEliminar.setText("Eliminar");
        JMIEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMIEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(JMIEliminar);

        setClosable(true);
        setTitle("CinemaEvolution");

        jTblPelicula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdPelícula", "Nombre Película", "Sinopsis", "Lanzamiento", "Duración", "Género", "Clasificación", "URL", "Imagen"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblPelicula.setComponentPopupMenu(jPopupMenu1);
        jTblPelicula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblPeliculaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTblPeliculaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTblPelicula);

        jPanel5.setBackground(new java.awt.Color(0, 128, 166));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_1.png"))); // NOI18N
        jBtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNuevoActionPerformed(evt);
            }
        });

        jPnlPelicula.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPnlPelicula.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Código Película");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre Película");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Lanzamiento");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sinopsis");

        jTASinopsis.setColumns(20);
        jTASinopsis.setRows(5);
        jScrollPane2.setViewportView(jTASinopsis);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Duración");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Género");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Clasificación");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("URL Trailer");

        jLblPelicula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtnAgregarImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image_add.png"))); // NOI18N
        jBtnAgregarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarImagenActionPerformed(evt);
            }
        });

        jBtnQuitarImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image_delete.png"))); // NOI18N
        jBtnQuitarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnQuitarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnlPeliculaLayout = new javax.swing.GroupLayout(jPnlPelicula);
        jPnlPelicula.setLayout(jPnlPeliculaLayout);
        jPnlPeliculaLayout.setHorizontalGroup(
            jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTFlink, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCboGenero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPnlPeliculaLayout.createSequentialGroup()
                                .addComponent(jCboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jTFDuracion))
                                    .addComponent(jLabel7)))))
                    .addComponent(jLabel8)
                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                        .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTFCodPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTFLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblPelicula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlPeliculaLayout.createSequentialGroup()
                                .addComponent(jBtnAgregarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBtnQuitarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPnlPeliculaLayout.setVerticalGroup(
            jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addComponent(jTFCodPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                        .addComponent(jLblPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnAgregarImagen, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnQuitarImagen, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addComponent(jCboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlPeliculaLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(1, 1, 1)
                        .addGroup(jPnlPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7))
                .addGap(11, 11, 11)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFlink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancel_1.png"))); // NOI18N
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(7, 140, 215));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 128, 166));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(0, 128, 166));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(0, 128, 166));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 26)); // NOI18N
        jLabel1.setText("Película");

        jBtnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save_1.png"))); // NOI18N
        jBtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Búsqueda por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setOpaque(false);

        buttonGroup1.add(jRBCodPelicula);
        jRBCodPelicula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBCodPelicula.setSelected(true);
        jRBCodPelicula.setText("Cod. Película");

        buttonGroup1.add(jRBNombre);
        jRBNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRBNombre.setText("Nombre");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/search_flat.png"))); // NOI18N

        jTFBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBusquedaActionPerformed(evt);
            }
        });
        jTFBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFBusquedaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jRBCodPelicula)
                .addGap(44, 44, 44)
                .addComponent(jRBNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRBCodPelicula)
                            .addComponent(jRBNombre))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 128, 166));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(0, 128, 166));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel14.setBackground(new java.awt.Color(0, 133, 216));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel15.setBackground(new java.awt.Color(0, 128, 166));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jBtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/update_1.png"))); // NOI18N
        jBtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarActionPerformed(evt);
            }
        });

        jPanel16.setBackground(new java.awt.Color(0, 128, 166));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel17.setBackground(new java.awt.Color(0, 128, 166));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel16.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel18.setBackground(new java.awt.Color(0, 133, 216));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel16.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel19.setBackground(new java.awt.Color(0, 128, 166));
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel16.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel20.setBackground(new java.awt.Color(0, 133, 216));
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel21.setBackground(new java.awt.Color(0, 128, 166));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel22.setBackground(new java.awt.Color(0, 128, 166));
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(0, 133, 216));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPnlPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jBtnNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(206, 206, 206)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPnlPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jBtnNuevo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jBtnActualizar, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jBtnGuardar, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jBtnCancelar)))
                        .addGap(32, 32, 32))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void habilitarControles(boolean nuevo, boolean guardar, boolean actualizar, boolean cancelar, boolean panel, boolean tabla){
        jBtnNuevo.setEnabled(nuevo);
        jBtnGuardar.setEnabled(guardar);
        jBtnActualizar.setEnabled(actualizar);
        jBtnCancelar.setEnabled(cancelar);
        jTblPelicula.setEnabled(tabla);
        habilitarPanel(jPnlPelicula, panel);   
        jTASinopsis.setEnabled(panel);
    }   
    private void habilitarPanel(JPanel panel, Boolean habilitar) {
        panel.setEnabled(habilitar);

        Component[] components = panel.getComponents();

        for (int i = 0; i < components.length; i++) {
            if (components[i].getClass().getName() == "javax.swing.JPanel") {
                habilitarPanel((JPanel) components[i], habilitar);
            }
            components[i].setEnabled(habilitar);
        }
    }
    private void llenarComboBoxClasificacion() throws SQLException{
        PeliculaDao ud = new PeliculaDao();
        String[] pelicula = new String[ud.mostrarClasificacion().size()];
        pelicula = ud.mostrarClasificacion().toArray(pelicula);
        DefaultComboBoxModel modeloClasificacion = new DefaultComboBoxModel(pelicula);
        jCboClasificacion.setModel(modeloClasificacion);
    }
     
    private void llenarComboBoxGenero() throws SQLException{
        PeliculaDao ud = new PeliculaDao();
        String[] genero = new String[ud.mostrarGenero().size()];
        genero = ud.mostrarGenero().toArray(genero);
        DefaultComboBoxModel modeloGenero = new DefaultComboBoxModel(genero);
        jCboGenero.setModel(modeloGenero);
    }
    private void limpiarTablaUsuario(){
        DefaultTableModel dtm = (DefaultTableModel) this.jTblPelicula.getModel(); 
        
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
    }      
    private void guardarPelicula() throws FileNotFoundException{ 
        try {
            PeliculaLogica el = new PeliculaLogica();
            PeliculaDao ed = new PeliculaDao();
            
            el.setNombre(this.jTFNombre.getText().trim());
            el.setImagen(ubicacion);
            el.setfLanzamiento(this.jTFLanzamiento.getText().trim());
            el.setSinopsis(this.jTASinopsis.getText().trim());
            el.setDuracion(this.jTFDuracion.getText().trim());
            el.setUrl(this.jTFlink.getText().trim());
            el.setIdGenero(ed.obtenerIdGenero(jCboGenero.getSelectedItem().toString()));
            el.setIdClasificacion(ed.obtenerIdClasificacion(jCboClasificacion.getSelectedItem().toString()));
            el.setIdUsuario(JMDI.idUsuario);
            ed.insertarPelicula(el);
            JOptionPane.showMessageDialog(null, "Registro almacenado satisfactoriamente","Cinema Evolution",JOptionPane.INFORMATION_MESSAGE);
            limpiar();   
            jTASinopsis.setEnabled(false);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al almacenar la pelicula: " + e);
        }
    }
//    
    private void actualizarPelicula() throws FileNotFoundException{
        try {
            PeliculaLogica el = new PeliculaLogica();
            PeliculaDao ed = new PeliculaDao();         
            
            el.setIdPelicula(Integer.parseInt(this.jTFCodPelicula.getText().trim()));
            el.setImagen(ubicacion);
            el.setNombre(this.jTFNombre.getText().trim());
            el.setfLanzamiento(this.jTFLanzamiento.getText().trim());
            el.setSinopsis(this.jTASinopsis.getText().trim());
            el.setDuracion(this.jTFDuracion.getText().trim());
            el.setUrl(this.jTFlink.getText().trim());
            el.setIdGenero(ed.obtenerIdGenero(jCboGenero.getSelectedItem().toString()));
            el.setIdClasificacion(ed.obtenerIdClasificacion(jCboClasificacion.getSelectedItem().toString()));
            el.setIdUsuario(JMDI.idUsuario);
            ed.actualizarPelicula(el);
            JOptionPane.showMessageDialog(null, "Registro actualizado satisfactoriamente","Cinema Evolution",JOptionPane.INFORMATION_MESSAGE);
            limpiar(); 
            jTASinopsis.setEnabled(false);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar la pelicula: " + e);
        }
    }
    
    private void eliminarPelicula(){
        try {
            PeliculaLogica el = new PeliculaLogica();
            PeliculaDao ed = new PeliculaDao();            
            el.setIdPelicula(Integer.parseInt(this.jTFCodPelicula.getText().trim()));
            ed.eliminarPelicula(el);
            JOptionPane.showMessageDialog(null, "Registro eliminado satisfactoriamente","Cinema Evolution",JOptionPane.INFORMATION_MESSAGE);
            limpiar();   
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar la pelicula: " + e);
        }
    }
                 
    private void busquedaPelicula(){
        if(!jTFBusqueda.getText().equals("")){
            if(jRBCodPelicula.isSelected() == true){
                try {
                    llenarTablaPelicula(1, jTFBusqueda.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(JIFUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                try {
                    llenarTablaPelicula(2, jTFBusqueda.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(JIFUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            try {
                    llenarTablaPelicula(0, "");
                } catch (SQLException ex) {
                    Logger.getLogger(JIFUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    private void llenarTablaPelicula(int tipoBusqueda, String filtro) throws SQLException{
        limpiarTablaUsuario();
        PeliculaDao ud = new PeliculaDao();
        List<PeliculaLogica> miLista = ud.getListaPelicula(tipoBusqueda, filtro);  
        DefaultTableModel temp = (DefaultTableModel) this.jTblPelicula.getModel(); 
        
        for(PeliculaLogica ul: miLista){ 
            Object[] fila = new Object[9];   
            fila[0] = ul.getIdPelicula();
            fila[1] = ul.getNombre();
            fila[2] = ul.getSinopsis();
            fila[3] = ul.getfLanzamiento();
            fila[4] = ul.getDuracion();
            fila[5] = ul.getGenero();
            fila[6] = ul.getClasificacion();  
            fila[7] = ul.getUrl();
            fila[8] = ul.getImg();
            
            temp.addRow(fila);
        }   
      
    }    
    private boolean validar(){
        boolean estado;
        
        if(jTFCodPelicula.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el código de la pelicula");
            jTFCodPelicula.requestFocus();
            estado = false;    
        }else if(jTFNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el nombre de la pelicula");
            jTFNombre.requestFocus();
            estado = false;    
        }else if(jTFLanzamiento.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el lanzmiento de la pelicula");
            jTFLanzamiento.requestFocus();
            estado = false;    
        }else if(jTASinopsis.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese la sinopsis de la pelicula");
            jTASinopsis.requestFocus();
            estado = false; 
        }else{
            estado = true;
        }
        return estado;
    }
    private void limpiar(){
        jTFCodPelicula.setText("");
        jTFNombre.setText("");
        jTFLanzamiento.setText("");
        jTASinopsis.setText("");
        jCboGenero.setSelectedIndex(0);
        jCboClasificacion.setSelectedIndex(0);
        jTFlink.setText("");
        jTFDuracion.setText("");
        ubicacion = "";
        jLblPelicula.setIcon(null);

   }
    private void investigarCorrelativoPelicula() throws SQLException{
        PeliculaDao ud = new PeliculaDao();
        PeliculaLogica ul = new PeliculaLogica();
        ul.setIdPelicula(ud.autoIncrementarPelicula());
        jTFCodPelicula.setText(String.valueOf(ul.getIdPelicula()));
    }
    private void filaSeleccionada() throws UnsupportedEncodingException, IOException {
        if (this.jTblPelicula.getSelectedRow() != -1) {
            if (this.jTblPelicula.isEnabled() == true) {
                this.jTFCodPelicula.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 0)));
                this.jTFNombre.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 1)));
                this.jTFLanzamiento.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 3)));
                this.jTASinopsis.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 2)));
                this.jCboGenero.setSelectedItem(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 5)));
                this.jCboClasificacion.setSelectedItem(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 6)));
                this.jTFDuracion.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 4)));
                this.jTFlink.setText(String.valueOf(this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 7)));        
                byte[] img = (byte[]) this.jTblPelicula.getValueAt(jTblPelicula.getSelectedRow(), 8);
             
                
                try {
                   
                    Image miImagen = convertirImagen(img);               
                    ImageIcon icon = new ImageIcon(miImagen);
                    Image imgs = icon.getImage();
                    Image newimg = imgs.getScaledInstance(142, 163, java.awt.Image.SCALE_SMOOTH);
                    ImageIcon newIcon = new ImageIcon(newimg);
                    jLblPelicula.setIcon(newIcon);
                    jLblPelicula.setSize(142, 163);
                } catch (Exception ex) {
                    jLblPelicula.setIcon(null);
                }
            }
        } else {
            limpiar();
        }
    }
    
    private void jTFBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFBusquedaActionPerformed

    private void jTFBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFBusquedaKeyReleased
        busquedaPelicula();
    }//GEN-LAST:event_jTFBusquedaKeyReleased

    private void jBtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNuevoActionPerformed
        habilitarControles(false, true, false, true, true, false);
        limpiar();
        try {
            investigarCorrelativoPelicula();
        } catch (SQLException ex) {
            Logger.getLogger(JIFUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtnNuevoActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
       if(JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro de cancelar el proceso?","Cinema Evolution",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            limpiar();
            habilitarControles(true, false, false, false, false, true);
            jTASinopsis.setEnabled(false);
            try {
                llenarTablaPelicula(0,"");
            } catch (SQLException ex) {
                Logger.getLogger(JIFEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
            jRBCodPelicula.setSelected(true);
        }
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void JMIEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIEditarActionPerformed
      jTASinopsis.setEnabled(true);
        try {
            filaSeleccionada();
        } catch (IOException ex) {
            Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
        }
      habilitarControles(false, false, true, true, true, false); 
      jTFBusqueda.setText("");
       
    }//GEN-LAST:event_JMIEditarActionPerformed

    private void jBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarActionPerformed
       if(validar()==true){
           try { 
               guardarPelicula();
           } catch (FileNotFoundException ex) {
               Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
           }
          habilitarControles(true, false, false, false, false, true);
           try {
               llenarTablaPelicula(0, "");
           } catch (SQLException ex) {
               Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
           }
       }       
    }//GEN-LAST:event_jBtnGuardarActionPerformed

    private void jBtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarActionPerformed
        if(validar() == true){
            try { 
                actualizarPelicula();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                llenarTablaPelicula(0, "");
            } catch (SQLException ex) {
                Logger.getLogger(JIFCartelera.class.getName()).log(Level.SEVERE, null, ex);
            }
            habilitarControles(true, false, false, false, false, true); 
            jRBCodPelicula.setSelected(true);
        }
    }//GEN-LAST:event_jBtnActualizarActionPerformed

    private void JMIEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMIEliminarActionPerformed
       if(JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro de eliminar la pelicula?","Cinema Evolution",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            eliminarPelicula(); 
            jTFBusqueda.setText("");
            try {
                llenarTablaPelicula(0, "");
            } catch (SQLException ex) {
                Logger.getLogger(JIFEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_JMIEliminarActionPerformed

    private void jTblPeliculaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblPeliculaMouseClicked
        try {
            filaSeleccionada();
        } catch (IOException ex) {
            Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTblPeliculaMouseClicked
    private Image convertirImagen(byte[] bytes) throws IOException {
        ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
        Iterator readers = ImageIO.getImageReadersByFormatName("jpg");
        ImageReader reader = (ImageReader) readers.next();
        Object source = bis; // File or InputStream
        ImageInputStream iis = ImageIO.createImageInputStream(source);
        reader.setInput(iis, true);
        ImageReadParam param = reader.getDefaultReadParam();
        return reader.read(0, param);
    }
    private void jBtnAgregarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarImagenActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de imagen", "jpg", "png");
        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(filter);
        int opcion = jfc.showOpenDialog(this);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            String file = jfc.getSelectedFile().getAbsolutePath();
            jLblPelicula.setIcon(new ImageIcon(file));
            String file2 = jfc.getSelectedFile().toString();
            ImageIcon icon = new ImageIcon(file);
            Image img = icon.getImage();
            Image nuevaImage = img.getScaledInstance(142, 163, java.awt.Image.SCALE_SMOOTH);
            ImageIcon nuevaIcon = new ImageIcon(nuevaImage);
            jLblPelicula.setIcon(nuevaIcon);
            jLblPelicula.setSize(142, 163);
            ubicacion = file;
        }
    }//GEN-LAST:event_jBtnAgregarImagenActionPerformed

    private void jBtnQuitarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnQuitarImagenActionPerformed
        ubicacion = "";
        jLblPelicula.setIcon(null);
    }//GEN-LAST:event_jBtnQuitarImagenActionPerformed

    private void jTblPeliculaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblPeliculaMouseReleased
        try {
            filaSeleccionada();
        } catch (IOException ex) {
            Logger.getLogger(JIFPelicula.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTblPeliculaMouseReleased

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JMIEditar;
    private javax.swing.JMenuItem JMIEliminar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtnActualizar;
    private javax.swing.JButton jBtnAgregarImagen;
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnGuardar;
    private javax.swing.JButton jBtnNuevo;
    private javax.swing.JButton jBtnQuitarImagen;
    private javax.swing.JComboBox<String> jCboClasificacion;
    private javax.swing.JComboBox<String> jCboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblPelicula;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPnlPelicula;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRBCodPelicula;
    private javax.swing.JRadioButton jRBNombre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTASinopsis;
    private javax.swing.JTextField jTFBusqueda;
    private javax.swing.JTextField jTFCodPelicula;
    private javax.swing.JTextField jTFDuracion;
    private javax.swing.JTextField jTFLanzamiento;
    private javax.swing.JTextField jTFNombre;
    private javax.swing.JTextField jTFlink;
    private javax.swing.JTable jTblPelicula;
    // End of variables declaration//GEN-END:variables
}
